from flask import Flask, request, jsonify
import os
import requests

app = Flask(__name__)

# Vari√°veis de ambiente
ZAPI_INSTANCE_ID = os.environ.get("ZAPI_INSTANCE_ID")
ZAPI_TOKEN = os.environ.get("ZAPI_TOKEN")

# Verifica√ß√£o inicial
if not ZAPI_INSTANCE_ID or not ZAPI_TOKEN:
    raise EnvironmentError("‚ö†Ô∏è As vari√°veis ZAPI_INSTANCE_ID ou ZAPI_TOKEN n√£o est√£o definidas.")

# Rota de teste (GET)
@app.route("/", methods=["GET"])
def home():
    return "‚úÖ Bot do WhatsApp est√° rodando com sucesso!"

# Rota de recebimento do webhook (POST)
@app.route("/", methods=["POST"])
def webhook():
    print("üì• Webhook recebido!")

    try:
        data = request.get_json()
        print("üì¶ Dados brutos recebidos:", data)

        # Verifica√ß√µes b√°sicas
        if not data:
            print("‚ö†Ô∏è Nenhum dado recebido no corpo da requisi√ß√£o.")
            return jsonify({"status": "no-data"}), 400

        message = data.get("message", {})
        phone = message.get("from")
        text = message.get("text", {}).get("body")

        if not phone or not text:
            print("‚ö†Ô∏è Telefone ou texto ausente na mensagem recebida.")
            return jsonify({"status": "ignored", "reason": "phone or text missing"}), 200

        print(f"üì® Mensagem recebida de {phone}: {text}")

        # Mensagem de resposta
        resposta = "Ol√°! Recebemos sua mensagem e em breve retornaremos. üòä"

        url = f"https://api.z-api.io/instances/{ZAPI_INSTANCE_ID}/token/{ZAPI_TOKEN}/send-text"
        payload = {
            "phone": phone,
            "message": resposta
        }

        print("‚û°Ô∏è Enviando resposta para Z-API...")
        zapi_response = requests.post(url, json=payload)

        if zapi_response.status_code != 200:
            print(f"‚ùå Erro na resposta da Z-API: {zapi_response.status_code} - {zapi_response.text}")
            return jsonify({"status": "zapi-error", "detail": zapi_response.text}), 500

        print("‚úÖ Resposta enviada com sucesso:", zapi_response.text)
        return jsonify({"status": "message-sent"}), 200

    except Exception as e:
        print("‚ùó Erro inesperado:", str(e))
        return jsonify({"status": "error", "detail": str(e)}), 500

# Executar localmente
if __name__ == "__main__":
    port = int(os.environ.get("PORT", 10000))
    app.run(host="0.0.0.0", port=port)
